"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.mergeTransformer = exports.PathTransformVisitor = exports.ASTBuilderVisitor = exports.ASTTransformVisitor = void 0;
const base_1 = require("./base");
const as_1 = require("../as");
const astBuilder_1 = require("./astBuilder");
const path_1 = require("./path");
const ts_mixer_1 = require("ts-mixer");
class Transform extends as_1.Transform {
}
class ASTTransformVisitor extends ts_mixer_1.Mixin(base_1.BaseVisitor, Transform) {
}
exports.ASTTransformVisitor = ASTTransformVisitor;
class ASTBuilderVisitor extends ts_mixer_1.Mixin(astBuilder_1.ASTBuilder, Transform) {
}
exports.ASTBuilderVisitor = ASTBuilderVisitor;
class PathTransformVisitor extends ts_mixer_1.Mixin(path_1.PathVisitor, Transform) {
}
exports.PathTransformVisitor = PathTransformVisitor;
function mergeTransformer(from, to) {
    //@ts-ignore
    to.program = from.program;
    //@ts-ignore
    to.baseDir = from.baseDir;
    //@ts-ignore
    to.stdout = from.stdout;
    //@ts-ignore
    to.stderr = from.stderr;
    //@ts-ignore
    to.log = from.log;
    to.writeFile = from.writeFile;
    to.readFile = from.readFile;
    to.listFiles = from.listFiles;
}
exports.mergeTransformer = mergeTransformer;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNmb3JtZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvdHJhbnNmb3JtZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsaUNBQXFDO0FBQ3JDLDhCQUFnRDtBQUNoRCw2Q0FBMEM7QUFDMUMsaUNBQXFDO0FBQ3JDLHVDQUFpQztBQUVqQyxNQUFNLFNBQVUsU0FBUSxjQUFVO0NBQUc7QUFFckMsTUFBYSxtQkFBb0IsU0FBUSxnQkFBSyxDQUFDLGtCQUFXLEVBQUUsU0FBUyxDQUFDO0NBQUc7QUFBekUsa0RBQXlFO0FBRXpFLE1BQWEsaUJBQWtCLFNBQVEsZ0JBQUssQ0FBQyx1QkFBVSxFQUFFLFNBQVMsQ0FBQztDQUFHO0FBQXRFLDhDQUFzRTtBQUV0RSxNQUFhLG9CQUFxQixTQUFRLGdCQUFLLENBQUMsa0JBQVcsRUFBRSxTQUFTLENBQUM7Q0FBRztBQUExRSxvREFBMEU7QUFFMUUsU0FBZ0IsZ0JBQWdCLENBQUMsSUFBZSxFQUFFLEVBQWE7SUFDN0QsWUFBWTtJQUNaLEVBQUUsQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQztJQUMxQixZQUFZO0lBQ1osRUFBRSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDO0lBQzFCLFlBQVk7SUFDWixFQUFFLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUM7SUFDeEIsWUFBWTtJQUNaLEVBQUUsQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQztJQUN4QixZQUFZO0lBQ1osRUFBRSxDQUFDLEdBQUcsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDO0lBQ2xCLEVBQUUsQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQztJQUM5QixFQUFFLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUM7SUFDNUIsRUFBRSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDO0FBQ2hDLENBQUM7QUFkRCw0Q0FjQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJhc2VWaXNpdG9yIH0gZnJvbSBcIi4vYmFzZVwiO1xuaW1wb3J0IHsgVHJhbnNmb3JtIGFzIF9UcmFuc2Zvcm0gfSBmcm9tIFwiLi4vYXNcIjtcbmltcG9ydCB7IEFTVEJ1aWxkZXIgfSBmcm9tIFwiLi9hc3RCdWlsZGVyXCI7XG5pbXBvcnQgeyBQYXRoVmlzaXRvciB9IGZyb20gXCIuL3BhdGhcIjtcbmltcG9ydCB7IE1peGluIH0gZnJvbSBcInRzLW1peGVyXCI7XG5cbmNsYXNzIFRyYW5zZm9ybSBleHRlbmRzIF9UcmFuc2Zvcm0ge31cblxuZXhwb3J0IGNsYXNzIEFTVFRyYW5zZm9ybVZpc2l0b3IgZXh0ZW5kcyBNaXhpbihCYXNlVmlzaXRvciwgVHJhbnNmb3JtKSB7fVxuXG5leHBvcnQgY2xhc3MgQVNUQnVpbGRlclZpc2l0b3IgZXh0ZW5kcyBNaXhpbihBU1RCdWlsZGVyLCBUcmFuc2Zvcm0pIHt9XG5cbmV4cG9ydCBjbGFzcyBQYXRoVHJhbnNmb3JtVmlzaXRvciBleHRlbmRzIE1peGluKFBhdGhWaXNpdG9yLCBUcmFuc2Zvcm0pIHt9XG5cbmV4cG9ydCBmdW5jdGlvbiBtZXJnZVRyYW5zZm9ybWVyKGZyb206IFRyYW5zZm9ybSwgdG86IFRyYW5zZm9ybSk6IHZvaWQge1xuICAvL0B0cy1pZ25vcmVcbiAgdG8ucHJvZ3JhbSA9IGZyb20ucHJvZ3JhbTtcbiAgLy9AdHMtaWdub3JlXG4gIHRvLmJhc2VEaXIgPSBmcm9tLmJhc2VEaXI7XG4gIC8vQHRzLWlnbm9yZVxuICB0by5zdGRvdXQgPSBmcm9tLnN0ZG91dDtcbiAgLy9AdHMtaWdub3JlXG4gIHRvLnN0ZGVyciA9IGZyb20uc3RkZXJyO1xuICAvL0B0cy1pZ25vcmVcbiAgdG8ubG9nID0gZnJvbS5sb2c7XG4gIHRvLndyaXRlRmlsZSA9IGZyb20ud3JpdGVGaWxlO1xuICB0by5yZWFkRmlsZSA9IGZyb20ucmVhZEZpbGU7XG4gIHRvLmxpc3RGaWxlcyA9IGZyb20ubGlzdEZpbGVzO1xufVxuIl19