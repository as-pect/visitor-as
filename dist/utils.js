"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.cloneNode = exports.toString = exports.not = exports.isLibrary = exports.hasDecorator = exports.isDecorator = exports.decorates = void 0;
const astBuilder_1 = require("./astBuilder");
const cloneDeep = require("lodash.clonedeep");
function decorates(node, name) {
    return node.name.text === name;
}
exports.decorates = decorates;
function isDecorator(name) {
    return (node) => decorates(node, name);
}
exports.isDecorator = isDecorator;
function hasDecorator(node, name) {
    var _a;
    // because it could be undefined
    return ((_a = node.decorators) === null || _a === void 0 ? void 0 : _a.some(isDecorator(name))) == true;
}
exports.hasDecorator = hasDecorator;
function isLibrary(node) {
    return node.isLibrary || node.internalPath.startsWith("~lib/rt/");
}
exports.isLibrary = isLibrary;
function not(fn) {
    return (t) => !fn(t);
}
exports.not = not;
function toString(node) {
    return astBuilder_1.ASTBuilder.build(node);
}
exports.toString = toString;
function cloneNode(node) {
    return cloneDeep(node);
}
exports.cloneNode = cloneNode;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvdXRpbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBT0EsNkNBQTBDO0FBRTFDLE1BQU0sU0FBUyxHQUFtQixPQUFPLENBQUMsa0JBQWtCLENBQUMsQ0FBQztBQUU5RCxTQUFnQixTQUFTLENBQUMsSUFBbUIsRUFBRSxJQUFZO0lBQ3pELE9BQThCLElBQUksQ0FBQyxJQUFLLENBQUMsSUFBSSxLQUFLLElBQUksQ0FBQztBQUN6RCxDQUFDO0FBRkQsOEJBRUM7QUFFRCxTQUFnQixXQUFXLENBQUMsSUFBWTtJQUN0QyxPQUFPLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxTQUFTLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ3pDLENBQUM7QUFGRCxrQ0FFQztBQUVELFNBQWdCLFlBQVksQ0FDMUIsSUFBMEIsRUFDMUIsSUFBWTs7SUFFWixnQ0FBZ0M7SUFDaEMsT0FBTyxPQUFBLElBQUksQ0FBQyxVQUFVLDBDQUFFLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLE1BQUssSUFBSSxDQUFDO0FBQzFELENBQUM7QUFORCxvQ0FNQztBQUVELFNBQWdCLFNBQVMsQ0FBQyxJQUFZO0lBQ3BDLE9BQU8sSUFBSSxDQUFDLFNBQVMsSUFBSSxJQUFJLENBQUMsWUFBWSxDQUFDLFVBQVUsQ0FBQyxVQUFVLENBQUMsQ0FBQztBQUNwRSxDQUFDO0FBRkQsOEJBRUM7QUFFRCxTQUFnQixHQUFHLENBQUksRUFBcUI7SUFDMUMsT0FBTyxDQUFDLENBQUksRUFBRSxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDMUIsQ0FBQztBQUZELGtCQUVDO0FBRUQsU0FBZ0IsUUFBUSxDQUFDLElBQVU7SUFDakMsT0FBTyx1QkFBVSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUNoQyxDQUFDO0FBRkQsNEJBRUM7QUFFRCxTQUFnQixTQUFTLENBQWlCLElBQU87SUFDL0MsT0FBTyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDekIsQ0FBQztBQUZELDhCQUVDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgRGVjb3JhdG9yTm9kZSxcbiAgSWRlbnRpZmllckV4cHJlc3Npb24sXG4gIERlY2xhcmF0aW9uU3RhdGVtZW50LFxuICBTb3VyY2UsXG4gIE5vZGUsXG59IGZyb20gXCIuLi9hc1wiO1xuaW1wb3J0IHsgQVNUQnVpbGRlciB9IGZyb20gXCIuL2FzdEJ1aWxkZXJcIjtcblxuY29uc3QgY2xvbmVEZWVwOiA8VD4odDogVCkgPT4gVCA9IHJlcXVpcmUoXCJsb2Rhc2guY2xvbmVkZWVwXCIpO1xuXG5leHBvcnQgZnVuY3Rpb24gZGVjb3JhdGVzKG5vZGU6IERlY29yYXRvck5vZGUsIG5hbWU6IHN0cmluZyk6IGJvb2xlYW4ge1xuICByZXR1cm4gKDxJZGVudGlmaWVyRXhwcmVzc2lvbj5ub2RlLm5hbWUpLnRleHQgPT09IG5hbWU7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc0RlY29yYXRvcihuYW1lOiBzdHJpbmcpOiAobm9kZTogRGVjb3JhdG9yTm9kZSkgPT4gYm9vbGVhbiB7XG4gIHJldHVybiAobm9kZSkgPT4gZGVjb3JhdGVzKG5vZGUsIG5hbWUpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaGFzRGVjb3JhdG9yKFxuICBub2RlOiBEZWNsYXJhdGlvblN0YXRlbWVudCxcbiAgbmFtZTogc3RyaW5nXG4pOiBib29sZWFuIHtcbiAgLy8gYmVjYXVzZSBpdCBjb3VsZCBiZSB1bmRlZmluZWRcbiAgcmV0dXJuIG5vZGUuZGVjb3JhdG9ycz8uc29tZShpc0RlY29yYXRvcihuYW1lKSkgPT0gdHJ1ZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzTGlicmFyeShub2RlOiBTb3VyY2UpOiBib29sZWFuIHtcbiAgcmV0dXJuIG5vZGUuaXNMaWJyYXJ5IHx8IG5vZGUuaW50ZXJuYWxQYXRoLnN0YXJ0c1dpdGgoXCJ+bGliL3J0L1wiKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG5vdDxUPihmbjogKHQ6IFQpID0+IGJvb2xlYW4pOiAodDogVCkgPT4gYm9vbGVhbiB7XG4gIHJldHVybiAodDogVCkgPT4gIWZuKHQpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdG9TdHJpbmcobm9kZTogTm9kZSk6IHN0cmluZyB7XG4gIHJldHVybiBBU1RCdWlsZGVyLmJ1aWxkKG5vZGUpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY2xvbmVOb2RlPFQgZXh0ZW5kcyBOb2RlPihub2RlOiBUKTogVCB7XG4gIHJldHVybiBjbG9uZURlZXAobm9kZSk7XG59XG4iXX0=